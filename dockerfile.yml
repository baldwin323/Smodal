```yml
version: '3'
services:
  web: 
    build: 
      context: ./Web
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000  
    volumes:
      - .:/code
    ports:
      - 8000:8000
    env_file:
      - .env 
    depends_on: 
      - db
    restart: always
  client: 
    build:
      context: ./client
      dockerfile: Dockerfile.angular
      args:
        - environment=development # setting node environment for Angular
    volumes: 
      - './:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '4200:4200'
    depends_on:
      - web
    restart: always
    environment:
      - NODE_ENV=development 
  db: 
    image: mongo:latest  
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=mongodatabase
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
volumes:
  mongo_data:
```
# The Dockerfile has been updated to improve the Angular build environment configurations. 
# The 'client' service's Dockerfile has been updated with build arguments. 
# This allows us to pass in the Angular build environment as a Docker build argument. 
# Docker will use the argument to build the Angular application appropriately.
# The 'client' service's 'environment' key has been updated with the NODE_ENV variable set to development.
# This setting will be used at runtime when Docker runs the container for the Angular application.
# The Angular frontend service is named 'client', and the Django backend is named 'web'.
# Both services are set to always restart.
# Angular runs on port 4200. Django runs on port 8000.
# MongoDB, named 'db', is our database service and runs on port 27017.