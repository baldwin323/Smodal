```yml
version: '3'
services:
  web: # Django Service
    build: 
      context: ./Web
      dockerfile: Dockerfile
    command: python3.12 manage.py runserver 0.0.0.0:8000  # Updated Python version to 3.12
    volumes:
      - .:/code
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on: 
      - db
    environment: # Configure Django to use Back4App backend
      # Update back4app credentials with actual ones
      - BACK4APP_APP_ID=data-evpxv  # app_id updated with provided id
      - BACK4APP_API_KEY=ac07da7d-bc3f-46c6-a2c8-2f3de7b7bed9  # api_key updated with provided private key
    restart: always
  client: # React Service
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes: # Corrected 'volume' property to 'volumes'
      - './:/usr/src/app'
      - '/usr/src/app/node_modules' # Map 'node_modules' folder
    ports:
      - '3000:3000'
    depends_on:
      - web
    restart: always
  db: # Postgres db service
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
volumes:
  postgres_data:
  ```
# Ensure the Dockerfile is fetched from updated github repository where Dockerfile contains instruction to install latest pip and Python3.12.
# Modified Python command version to align with the updated python version.