// Generated by CoffeeScript 1.4.0
var Defer, support;

Defer = require('when').defer;

support = require('./support');

module.exports = {
  onceIfString: function(fn) {
    return (function(done) {
      return function(value) {
        if (!done) {
          if (done = typeof value === 'string') {
            return fn(value);
          }
        }
      };
    })(false);
  },
  isFn: function(fn) {
    return (function() {
      return function(value) {
        if (typeof value === 'function') {
          return fn(value);
        }
        return false;
      };
    })();
  },
  isMiddleware: function(fn) {
    return function(middleware) {
      var next;
      if (!(next = support.argsOf(middleware)[1])) {
        console.log('TODO: silent ignore invalid middleware not good, make plan');
        return function() {
          return false;
        };
      }
      if (!support.callsFn(next, middleware)) {
        console.log('TODO: silent ignore invalid middleware not good, make plan');
        return function() {
          return false;
        };
      }
      return fn(middleware);
    };
  },
  asResolver: function(fn) {
    return function(middleware) {
      return fn(function(msg) {
        var defer, next;
        defer = Defer();
        next = defer.resolve;
        middleware(msg, next);
        return defer.promise;
      });
    };
  }
};
